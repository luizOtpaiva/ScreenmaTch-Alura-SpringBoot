# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  testes:
    name: Testes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Run tests
        run: mvn -B -DskipTests=false test

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: target/surefire-reports/

  empacotar:
    name: Empacotar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Build package (skip tests here - tests run in 'testes' job)
        run: mvn -B -DskipTests package

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: target/*.jar

  notificacao:
    name: Notificação por e-mail
    runs-on: ubuntu-latest
    needs: [testes, empacotar]
    if: always()
    env:
      EMAIL_RECIPIENT: ${{ vars.EMAIL_RECIPIENT }}
      SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Instalar msmtp
        run: |
          sudo apt-get update
          sudo apt-get install -y msmtp ca-certificates

      - name: Preparar configuração do msmtp
        run: |
          cat > ~/.msmtprc <<EOF
          defaults
          tls on
          tls_trust_file /etc/ssl/certs/ca-certificates.crt
          account default
          host $SMTP_SERVER
          port $SMTP_PORT
          auth on
          user $SMTP_USER
          password $SMTP_PASS
          from $SMTP_USER
          EOF
          chmod 600 ~/.msmtprc

      - name: Executar script de envio de email
        run: |
          SUBJECT="Pipeline executado para ${{ github.repository }} (ref ${{ github.ref }})"
          BODY="Resultado - Testes: ${{ needs.testes.result }} | Build: ${{ needs.empacotar.result }}\nVeja artifacts do run no GitHub Actions."
          .github/scripts/send_email.sh "$SUBJECT" "$BODY"
